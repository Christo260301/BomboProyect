@model BomboProyect.Models.Usuarios

@{
    ViewBag.Title = "Alta";
}

@Styles.Render("~/Content/css")

<div class="container-fluid">
    <div class="row mt-5">
        <div class="col-6">
            <h2>Alta de Usuario</h2>
        </div>
        <div class="col-6">
            <div class="d-flex justify-content-end">
                <a href="@Url.Action("Index", "Usuarios")" class="btn btn-secondary">
                    <i class="fa-solid fa-arrow-left"></i>
                    <span>Regresar al listado</span>
                </a>
            </div>
        </div>
    </div>

    <div class="row justify-content-center mt-3">
        <div class="col-8 shadow p-3 mb-5 bg-body rounded">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "form-text text-danger" })

                <div class="row justify-content-start">
                    <div class="col-3 text-start">
                        <b>
                            @if (ViewBag.error != null)
                            {
                                @ViewBag.error
                            }
                        </b>
                    </div>
                </div>

                <div class="row justify-content-between g-4">
                    <div class="col-auto">
                        @Html.LabelFor(model => model.Nombre, "Nombre:", htmlAttributes: new { @class = "form-label" })

                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "form-text text-danger" })

                    </div>

                    <div class="col-auto">
                        @Html.LabelFor(model => model.ApePat, "Apellido Paterno:", htmlAttributes: new { @class = "form-label" })

                        @Html.EditorFor(model => model.ApePat, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ApePat, "", new { @class = "form-text text-danger" })

                    </div>

                    <div class="col-auto">
                        @Html.LabelFor(model => model.ApeMat, "Apellido Materno:", htmlAttributes: new { @class = "form-label" })

                        @Html.EditorFor(model => model.ApeMat, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ApeMat, "", new { @class = "form-text text-danger" })

                    </div>


                    <div class="col-auto">
                        @Html.LabelFor(model => model.Calle, "Calle:", htmlAttributes: new { @class = "form-label" })

                        @Html.EditorFor(model => model.Calle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Calle, "", new { @class = "form-text text-danger" })

                    </div>

                    <div class="col-auto">
                        @Html.LabelFor(model => model.NumExt, "Número exterior:", htmlAttributes: new { @class = "control-label col-md-8" })

                        @Html.EditorFor(model => model.NumExt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NumExt, "", new { @class = "form-text text-danger" })

                    </div>

                    <div class="col-auto">
                        @Html.LabelFor(model => model.NumInt, "Número interior:", htmlAttributes: new { @class = "control-label col-md-8" })

                        @Html.EditorFor(model => model.NumInt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NumInt, "", new { @class = "form-text text-danger" })

                    </div>

                    <div class="col-auto">
                        @Html.LabelFor(model => model.Colonia, "Colonia:", htmlAttributes: new { @class = "form-label" })

                        @Html.EditorFor(model => model.Colonia, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Colonia, "", new { @class = "form-text text-danger" })

                    </div>


                    <div class="col-auto">
                        @Html.LabelFor(model => model.CP, "Código postal:", htmlAttributes: new { @class = "control-label col-md-7" })

                        @Html.EditorFor(model => model.CP, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CP, "", new { @class = "form-text text-danger" })

                    </div>

                    <div class="col-auto">
                        @Html.LabelFor(model => model.Ciudad, "Ciudad:", htmlAttributes: new { @class = "form-label" })

                        @Html.EditorFor(model => model.Ciudad, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Ciudad, "", new { @class = "form-text text-danger" })

                    </div>

                    <div class="col-auto">
                        @Html.LabelFor(model => model.Municipio, "Municipio:", htmlAttributes: new { @class = "form-label" })

                        @Html.EditorFor(model => model.Municipio, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Municipio, "", new { @class = "form-text text-danger" })

                    </div>

                    <div class="col-auto">
                        @Html.LabelFor(model => model.Estado, "Estado:", htmlAttributes: new { @class = "form-label" })

                        @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "form-text text-danger" })

                    </div>


                    <div class="col-auto">
                        @Html.LabelFor(model => model.Telefono, "Número teléfonico:", htmlAttributes: new { @class = "control-label col-md-9" })

                        @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                        @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "form-text text-danger" })

                    </div>

                    <div class="col-auto">
                        @Html.LabelFor(model => model.Correo, "Correo electronico:", htmlAttributes: new { @class = "control-label col-md-9" })

                        @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
                        @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "form-text text-danger" })

                    </div>

                    <div class="col-auto">
                        @Html.LabelFor(model => model.Contrasennia, "Contraseña:", htmlAttributes: new { @class = "form-label" })

                        @Html.EditorFor(model => model.Contrasennia, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                        @Html.ValidationMessageFor(model => model.Contrasennia, "", new { @class = "form-text text-danger" })

                    </div>

                    <div class="col-auto">
                        @Html.Label("Roless", "Rol de usuario:", htmlAttributes: new { @class = "control-label col-md-8" })

                        @Html.DropDownList("Roless", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Rol.RolId, "", new { @class = "form-text text-danger" })

                    </div>

                    <div class="col-auto">
                        <div class="form-check">
                            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-check-input", @checked = "true" } })
                            @Html.LabelFor(model => model.Status, "Estatus", htmlAttributes: new { @class = "form-check-label" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "form-text text-danger" })
                    </div>
                </div>

                <div class="d-grid mt-2">
                    <button class="btn btn-success" type="submit">Registrar</button>
                </div>

                @*<div class="col-lg-12" style="margin-bottom:20px;">
                        <div style="float: right; padding-right: 10px;">
                            @Html.ActionLink("Cancelar", "Index", "Acceso", null,
                            new { @class = "btn btn-danger" })
                        </div>
                        <div class="form-group">
                            <div style="float: right; padding-right: 10px; ">
                                <button type="submit" class="btn btn-success">Registrar</button>
                            </div>
                        </div>



                    </div>*@

            }
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
}

